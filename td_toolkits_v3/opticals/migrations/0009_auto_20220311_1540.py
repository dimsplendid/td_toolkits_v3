# Generated by Django 3.1.1 on 2022-03-11 15:40

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0010_auto_20220309_1410'),
        ('opticals', '0008_auto_20220309_1310'),
    ]

    operations = [
        migrations.CreateModel(
            name='OpticalLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('measure_point', models.SmallIntegerField()),
                ('measure_time', models.DateTimeField()),
                ('operator', models.CharField(max_length=255)),
                ('voltage', models.FloatField()),
                ('lc_percent', models.FloatField()),
                ('w_x', models.FloatField()),
                ('w_y', models.FloatField()),
            ],
        ),
        migrations.RemoveConstraint(
            model_name='axometricslog',
            name='chip_measure_point',
        ),
        migrations.AddConstraint(
            model_name='axometricslog',
            constraint=models.UniqueConstraint(fields=('chip', 'measure_point'), name='axo_chip_measure_point'),
        ),
        migrations.AddField(
            model_name='opticallog',
            name='chip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.chip'),
        ),
        migrations.AddField(
            model_name='opticallog',
            name='instrument',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='opticals.instrument'),
        ),
        migrations.AddConstraint(
            model_name='opticallog',
            constraint=models.UniqueConstraint(fields=('chip', 'measure_point'), name='opt_chip_measure_point'),
        ),
    ]
